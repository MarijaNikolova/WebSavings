openapi: 3.0.2
info:
  title: "API for the Web Savings calculator"
  version: 1.0.0

  description: |
    API for the Web Savings Calculator which contains the logic required for the calculator to work.

    Modules:
      - getConfigData
      - saveConfigData
      - getCustomerData
      - saveCustomerData
      - getCashFlows
      - saveCashFlow
      - getGoals
      - saveGoal
      - getAccounts
      - saveAccount
      - getAnnualValues

  contact:
    name: Lead developer
    email: marijanikolova93@hotmail.com

servers:
  - url: "/"
paths:
  "/config-data":
    get:
      tags:
        - Config data
      summary: >-
        Retrieves saved config data for the given client.
      operationId: getConfigData
      parameters:
        - $ref: "#/components/parameters/CustomerId"
      responses:
        200:
          description: >-
            The request was successful, the config data was retrieved.
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/ConfigData"
    put:
      tags:
        - Config data
      summary: >-
        Saves the given config data for the client.
      operationId: saveConfigData
      parameters:
        - $ref: "#/components/parameters/CustomerId"
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: "#/components/schemas/ConfigData"
        required: true
      responses:
        204:
          description: "The content for config data was saved, please retrieve it."
  "/customer":
    get:
      tags:
        - Customer
      summary: >-
        Retrieves the customer data for the given email.
      operationId: getCustomerData
      parameters:
        - $ref: "#/components/parameters/CustomerEmail"
        - $ref: "#/components/parameters/CustomerPassword"
      responses:
        200:
          description: >-
            The request was successful, the customer data is retrieved.
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/CustomerData"
    put:
      tags:
        - Customer
      summary: "Saves the customer data for the given client."
      operationId: saveCustomerData
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: "#/components/schemas/CustomerData"
        required: true
      responses:
        200:
          description: "The content for customer was saved, please retrieve it."
  "/cashflows":
    get:
      tags:
        - CashFlows
      summary: >-
        Retrieves all cash flows for the given customer
      operationId: getCashFlows
      parameters:
        - $ref: "#/components/parameters/CustomerId"
      responses:
        200:
          description: >-
            Retrieves all cash flows for the given client
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CashFlow"
    put:
      tags:
         - CashFlows
      summary: >-
        Saves the cash flow for the given customer
      operationId: saveCashFlow
      parameters:
        - $ref: "#/components/parameters/CustomerId"
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: "#/components/schemas/CashFlow"
        required: true
      responses:
        200:
          description: "The content for the cash flows was saved, please retrieve it."
  "/goals":
    get:
      tags:
        - Goals
      summary: >-
        Retrieves all goals for the given customer
      operationId: getGoals
      parameters:
        - $ref: "#/components/parameters/CustomerId"
      responses:
        200:
          description: >-
            The request was successful, the goals retrieved.
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Goal"
    put:
      tags:
        - Goals
      summary: >-
        Saves the goal for the given customer
      operationId: saveGoal
      parameters:
        - $ref: "#/components/parameters/CustomerId"
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: "#/components/schemas/Goal"
        required: true
      responses:
        200:
          description: "The content for goal  was saved, please retrieve it."
  "/accounts":
      get:
        tags:
          - Accounts
        summary: >-
          Retrieves all accounts for the given customer
        operationId: getAccounts
        parameters:
          - $ref: "#/components/parameters/CustomerId"
        responses:
          200:
            description: >-
              The request was successful, the accounts are retrieved.
            content:
              application/json;charset=utf-8:
                schema:
                  type: array
                  items:
                    $ref: "#/components/schemas/Account"
      put:
        tags:
          - Accounts
        summary: >-
          Saves the account for the given customer
        operationId: saveAccount
        parameters:
          - $ref: "#/components/parameters/CustomerId"
        requestBody:
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Account"
          required: true
        responses:
          200:
            description: "The content for account  was saved, please retrieve it."
  "/projections":
    get:
      tags:
        - Annual values
      summary: >-
        Retrieves all annual values for the given customer
      operationId: getAnnualValues
      parameters:
        - $ref: "#/components/parameters/CustomerId"
      responses:
        200:
          description: >-
            The request was successful, the annualValues are retrieved.
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Projection"

components:
  schemas:
    ConfigData:
      type: object
      properties:
        numberOfYears:
          type: integer
          description: >-
            Number of years for which the duration of the plan should be calculated.
          example: 12
        language:
          type: string
          description: >-
            The language in which the client wants to see the application (MK or EN)
          example: 'EN'
          default: 'EN'
        id:
          type: integer
          description: "The id of the config data"
          example: 1

    CustomerData:
      type: object
      properties:
        surname:
          type: string
          description: "The surname of the client"
          example: "Smith"
        name:
          type: string
          description: "The name of the client"
          example: "John"
        email:
          type: string
          format: email
          description: "The email of the client"
          example: "john@somewhere.com"
        dateOfBirth:
          type: string
          format: date
          description: "The date of birth of the client"
          example: "01.01.1966"
        id:
          type: integer
          description: "The id of the client"
          example: 1
        password:
          type: string
          description: "The password of the client"
          example: "pass123"
    CashFlow:
      type: object
      properties:
        id:
          type: integer
          description: "The id of the cash flow"
          example: 1
        value:
          type: number
          description: "The value of the cash flow"
          example: 30.0
        currency:
          type: string
          description: "The currency of the cash flow"
          example: 'CHF'
        occurenceType:
          type: string
          enum:
            - RECURRING
            - ONE-TIME
          description: "The occurrence of the cash flow"
          example: "RECURRING"
        description:
          type: string
          description: "The description of the cash flow"
          example: "Income from house rent"
        category:
          type: string
          description: "The category of the cash flow"
          example: "Mortgages"
        type:
          type: string
          enum:
            - INCOME
            - EXPENSE
          description: "The type of the cash flow - income or expense"
          example: "income"
        dateFrom:
          type: string
          format: date
          description: "The to date for the cash flow"
          example: "2021-01-01"
        dateTo:
          type: string
          format: date
          description: "The to date for the cash flow"
          example: "2021-01-01"
    Goal:
      type: object
      properties:
        description:
          type: string
          description: "The description of the goal"
          example: "Car goal"
        plannedFor:
          type: string
          format: date
          description: "The planned date for the goal"
          example: "2021-01-01"
        value:
          type: number
          description: "The value of the goal"
          example: 30.0
        currency:
          type: string
          description: "The currency of the goal"
          example: 'CHF'
        type:
          type: string
          enum:
            - REAL_ESTATE_GOAL
            - CAR_GOAL
            - TRAVEL_GOAL
            - OTHER_GOAL
          description: "The type of the goal."
          example: "CAR_GOAL"
        id:
          type: integer
          description: "The id of the account"
          example: 1
    Bank:
      type: object
      properties:
        name:
          type: string
          description: "The name of the bank"
          example: "NLB bank"
        type:
          type: string
          description:  "The type of the bank"
          example: "second pillar"
    Account:
      type: object
      properties:
        id:
          type: integer
          description: "The id of the account"
          example: 1
        description:
          type: string
          description: "The description of the goal"
          example: "Car goal"
        initialValue:
          type: number
          description: "The value of the account"
          example: 30.0
        currency:
          type: string
          description: "The currency of the account"
          example: 'CHF'
        growthRate:
          type: number
          description: "The growth rate of the account in range from 0 to 1"
          example: 0.03
        riskFactor:
          type: number
          description: "The risk factor"
          example: 0.1
        type:
          type: string
          enum:
            - INVESTMENT_ACCOUNT
            - DEPOSIT
            - REGULAR_ACCOUNT
            - SECOND_PILLAR
          description: "The type of the account."
          example: "DEPOSIT"
        bank:
          $ref: "#/components/schemas/Bank"
    AnnualValueDto:
      type: object
      properties:
        value:
          type: number
          description: "The value of the asset for that year"
          example: 3000.0
        currency:
          type: string
          description: "The currency"
          example: 'CHF'
        income:
          type: number
          description: "The value of the asset's income for that year"
          example: 3000.0
        expense:
          type: number
          description: "The value of the asset's expense for that year"
          example: 3000.0
    Projection:
      type: object
      properties:
        id:
          type: integer
          description: "The id of the asset"
          example: 1
        description:
          type: string
          description: "The description of the asset"
          example: "deposit 1"
        category:
          type: string
          enum:
            - CASHFLOW
            - ACCOUNT
            - GOAL
          description: "Type of the cash flow"
          example: CASHFLOW
        values:
          type: object
          additionalProperties:
            type: object
            properties:
              year:
                type: integer
              value:
                $ref: "#/components/schemas/AnnualValueDto"

  parameters:
    CustomerId:
      name: customerId
      description: '`The customer id.'
      in: query
      required: true
      example: 1
      schema:
        type: integer
        x-data-class-category: d-non-sensitive-identifier
    CustomerEmail:
      name: customerEmail
      description: 'The customer email.'
      in: query
      required: true
      example: john@somewhere.com
      schema:
        type: string
    CustomerPassword:
      name: customerPassword
      description: "The customer password"
      in: query
      required: true
      example: pass123
      schema:
        type: string


